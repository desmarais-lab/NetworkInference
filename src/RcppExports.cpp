// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// netinf_
List netinf_(List& cascade_nodes, List& cascade_times, int& n_edges, std::string& model, NumericVector& params, bool quiet, bool& auto_edges, double& cutoff);
RcppExport SEXP _NetworkInference_netinf_(SEXP cascade_nodesSEXP, SEXP cascade_timesSEXP, SEXP n_edgesSEXP, SEXP modelSEXP, SEXP paramsSEXP, SEXP quietSEXP, SEXP auto_edgesSEXP, SEXP cutoffSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List& >::type cascade_nodes(cascade_nodesSEXP);
    Rcpp::traits::input_parameter< List& >::type cascade_times(cascade_timesSEXP);
    Rcpp::traits::input_parameter< int& >::type n_edges(n_edgesSEXP);
    Rcpp::traits::input_parameter< std::string& >::type model(modelSEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type params(paramsSEXP);
    Rcpp::traits::input_parameter< bool >::type quiet(quietSEXP);
    Rcpp::traits::input_parameter< bool& >::type auto_edges(auto_edgesSEXP);
    Rcpp::traits::input_parameter< double& >::type cutoff(cutoffSEXP);
    rcpp_result_gen = Rcpp::wrap(netinf_(cascade_nodes, cascade_times, n_edges, model, params, quiet, auto_edges, cutoff));
    return rcpp_result_gen;
END_RCPP
}
// count_possible_edges_
int count_possible_edges_(List& cascade_nodes, List& cascade_times, bool quiet);
RcppExport SEXP _NetworkInference_count_possible_edges_(SEXP cascade_nodesSEXP, SEXP cascade_timesSEXP, SEXP quietSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List& >::type cascade_nodes(cascade_nodesSEXP);
    Rcpp::traits::input_parameter< List& >::type cascade_times(cascade_timesSEXP);
    Rcpp::traits::input_parameter< bool >::type quiet(quietSEXP);
    rcpp_result_gen = Rcpp::wrap(count_possible_edges_(cascade_nodes, cascade_times, quiet));
    return rcpp_result_gen;
END_RCPP
}
