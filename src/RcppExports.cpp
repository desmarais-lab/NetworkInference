// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// netinf_
Rcpp::List netinf_(Rcpp::List cascade_nodes, Rcpp::List cascade_times, int model, double lambda, int n_iter, bool verbose, bool edge_info);
RcppExport SEXP NetworkInference_netinf_(SEXP cascade_nodesSEXP, SEXP cascade_timesSEXP, SEXP modelSEXP, SEXP lambdaSEXP, SEXP n_iterSEXP, SEXP verboseSEXP, SEXP edge_infoSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type cascade_nodes(cascade_nodesSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type cascade_times(cascade_timesSEXP);
    Rcpp::traits::input_parameter< int >::type model(modelSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< int >::type n_iter(n_iterSEXP);
    Rcpp::traits::input_parameter< bool >::type verbose(verboseSEXP);
    Rcpp::traits::input_parameter< bool >::type edge_info(edge_infoSEXP);
    rcpp_result_gen = Rcpp::wrap(netinf_(cascade_nodes, cascade_times, model, lambda, n_iter, verbose, edge_info));
    return rcpp_result_gen;
END_RCPP
}
